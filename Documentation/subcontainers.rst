Subcontainers (experimental)
============================

A *subcontainer* is a container generated by another storage backend. Usually
it is a "micro-container" pointing at a subset of the parent container content,
but the mechanism doesn't limit it to this case. Subcontainers always have the
same owner as its parent container. If the desired content consists of
subcontainers only (the content of the parent container isn't ought to be
accessed directly), it is recommended to not add any extra paths to the parent
container or use one in a hidden directory (the "uuid" path will be added
automatically anyway).

A subcontainer usually has one storage backend of *delegate* type, pointint at
its parent container and specitying a subdirectory that should be used. Parent
container can be conveniently pointed via a Wildland URL
``wildland:@default:@parent-container:``. Note ``@default`` in this context
always means the owner of the container (not the default user in the Wildland
configuration) and ``@parent-container`` special path is valid only when used
within a subcontainer.

Storage backend that wants to implement subcontainers, should implement a
``list_subcontainers()`` method that returns a list of container manifests (in
a form of ``dict`` with the same structure). It is recommended to include
storage manifests inline. Some of the fields can be skipped, as they are
unambigously determined by the parent container:

 - ``owner`` in the container part
 - ``owner`` in the storage backend part
 - ``container-path`` in the storage backend part

Each subcontainer should have an unique but stable UUID path (one in form of
``/.uuid/<UUID>`` where ``<UUID>`` is an identifier formed in UUID format). It
should be the first path.

Example implementation of a ``list_subcontainers()`` method would look like this::

    def list_subcontainers(self) -> Iterable[dict]:
        subcontainer_paths = ['/path1', '/path2', '/path3']
        ns = uuid.UUID(self.backend_id[:32])

        for path in subcontainer_paths:
            yield {
                'paths': [
                    '/.uuid/{!s}'.format(uuid.uuid3(ns, path)),
                    path,
                ],
                'backends': {'storage': [{
                    'type': 'delegate',
                    'reference-container': 'wildland:@default:@parent-container:',
                    'subdirectory': path,
                }]}
            }

This example presents three selected subdirectories as a separate subcontainers.
