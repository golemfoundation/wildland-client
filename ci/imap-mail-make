#!/usr/bin/env python3
# Usage: imap-mail-make <maildir-path> <datafile-path>
#
# Generates maildir emails from a data file. Injected emails are always for user@here.
# The data file is a text file consisting of records in the following format
# (all fields consist of one line):
#
# sender email
# subject
# time in the format YYYY-MM-DD HH:MM:SS
# body
#
# Records should be separated by an additional empty line.
# Standard escape sequences like \n and \xUU are supported.
import codecs
import mailbox
from datetime import datetime

from sys import argv
from email.message import EmailMessage
from email.utils import make_msgid
from typing import Optional


def make_mail(mbox_path: str, from_: str, subject: str, body: str, time: Optional[datetime]):
    mdir = mailbox.Maildir(mbox_path)
    msg = EmailMessage()
    msg['From'] = from_
    msg['To'] = 'user@here'
    msg['Subject'] = subject
    if time:
        msg['Date'] = time
    msg['Message-ID'] = make_msgid()
    msg.set_content(body)
    print(repr(msg['Subject']))
    mdir.add(msg)
    mdir.close()


def main(mbox_path: str, data_path: str):
    with open(data_path, 'rb') as f:
        lines = f.read().splitlines()
        lines = filter(lambda line: not line.strip().startswith(b'#'), lines)
        lines = list(filter(lambda line: len(line.strip()) > 0, lines))
        assert len(lines) % 4 == 0, 'Cannot split test data into records'
        lines = [s.decode('utf-8') for s in lines]
        lines = [codecs.escape_decode(s)[0].decode('utf-8') for s in lines]
        records = [lines[i:i+4] for i in range(0, len(lines), 4)]

        for record in records:
            try:
                time = datetime.strptime(record[2], '%Y-%m-%d %H:%M:%S')
            except ValueError:
                time = None
            make_mail(mbox_path, record[0], record[1], record[3], time)


if __name__ == '__main__':
    main(argv[1], argv[2])
