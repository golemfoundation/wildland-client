#!/usr/bin/env bash

set -ex

. /home/user/env/bin/activate
. ci/install-inplace gitlab-graphql

WL='python3 -m coverage run -p ./wl --verbose'

# Setup
ROOT="$HOME/wildland"
MNT_DIR_1="gitlab-mnt-1"
MNT_DIR_2="gitlab-mnt-2"

# Create and mount a gitlab-graphql container with a specified project path
$WL user create gitlab-user
$WL container create GitLab --path "/$MNT_DIR_1"
$WL storage create gitlab-graphql --container GitLab --personal-token $PERSONAL_GITLAB_TOKEN --project-path wildland/ci-example-project
$WL start
$WL container mount --with-subcontainers GitLab

# List full tree
time -p chronic tree "$ROOT"

# List /wildland directory
time -p chronic ls "$ROOT"

# List contents of the project directory
time -p chronic ls "$ROOT"/projects/ci\ example\ project/

# List contents of the timeline directory for the project
time -p test -d "$ROOT"/timeline/2021/06/16

# Checking the categories permutation
time -p test -d "$ROOT"/projects/ci\ example\ project/open/labels/feature/

# Labels with 2 issues
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/backends/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/backends/issue\ 2/issue\ 2.md

# Labels with a single issue
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/feature/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/welcome/issue\ 2/issue\ 2.md

# Author categories
time -p test -f "$ROOT"/projects/ci\ example\ project/open/author/maja.kostacinska/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/author/maja.kostacinska/issue\ 2/issue\ 2.md

# Milestone and epic categories (undefined)
time -p test -f "$ROOT"/projects/ci\ example\ project/open/epics/undefined/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/epics/undefined/issue\ 2/issue\ 2.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/milestones/undefined/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/milestones/undefined/issue\ 2/issue\ 2.md

# Read contents of files
time -p chronic grep 'issue' "$ROOT"/projects/ci\ example\ project/open/epics/undefined/issue\ 2/issue\ 2.md

# Unmount the container
time -p chronic $WL container unmount GitLab

# Create and mount a gitlab-graphql container without a specified project path
$WL container create GitLab-no-path --path "/$MNT_DIR_2"
$WL storage create gitlab-graphql --container GitLab-no-path --personal-token $PERSONAL_GITLAB_TOKEN
$WL container mount --with-subcontainers GitLab-no-path

# List contents of the project directory
time -p chronic ls "$ROOT"/projects/ci\ example\ project/

# List contents of the timeline directory for the project
time -p test -d "$ROOT"/timeline/2021/06/16

# Checking the categories permutation
time -p test -d "$ROOT"/projects/ci\ example\ project/open/labels/feature/

# Labels with 2 issues
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/backends/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/backends/issue\ 2/issue\ 2.md

# Labes with a single issue
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/feature/issue\ 1/issue\ 1.md
time -p test -f "$ROOT"/projects/ci\ example\ project/open/labels/welcome/issue\ 2/issue\ 2.md

# Read contents of files
time -p chronic grep 'issue' "$ROOT"/projects/ci\ example\ project/open/labels/welcome/issue\ 2/issue\ 2.md

# Unmount the container
time -p chronic $WL container unmount GitLab-no-path

# Test storage template creation
$WL template create gitlab-graphql --personal-token $PERSONAL_GITLAB_TOKEN --project-path wildland/ci-example-project gitlab-temp
$WL container create gitlab-template --template gitlab-temp
$WL container mount gitlab-template

# Verify that the template creation works
time -p chronic tree $ROOT

$WL container unmount gitlab-template
