#!/usr/bin/env bash

set -ex

. /home/user/env/bin/activate
pip install . plugins/ipfs/

# Setup
ROOT="$HOME/wildland"
MNT_DIR_1="ipfs-mnt-1"
MNT_PATH_1="$ROOT/$MNT_DIR_1"
DATA_DIR_1="$HOME/tmp/ipfs-data"

# IPFS

ipfs init
ipfs config Addresses.Gateway "/ip4/127.0.0.1/tcp/8888" # 8080 is already taken
echo "Starting IPFS daemon: ipfs."
ipfs daemon &

echo "IPFS is running at /ip4/127.0.0.1/tcp/8888"
echo

mkdir -p "$DATA_DIR_1"/subdir
printf "foo" > "$DATA_DIR_1"/file
printf "bar" > "$DATA_DIR_1"/subdir/file

sleep 5
# wait for the daemon to start
while ! ipfs diag sys &>/dev/null; do
  sleep 1
done

HASH=$(ipfs add -r "$DATA_DIR_1" | grep -E 'Qm.{44} ipfs-data$' -o | head -c 46)

# Wildland

wl user create ipfs-user
wl container create ipfs-con --path "/$MNT_DIR_1"
wl storage create ipfs --container ipfs-con --endpoint-addr "/ip4/127.0.0.1/tcp/8888" --ipfs-hash /ipfs/$HASH ipfs-storage
wl start --container ipfs-con

# Testing

time -p chronic /bin/bash -c '[[ $(cat '$MNT_PATH_1'/file) == "foo" ]]'
time -p chronic /bin/bash -c '[[ $(cat '$MNT_PATH_1'/subdir/file) == "bar" ]]'

# Test storage-template creation
wl template create ipfs --endpoint-addr "/ip4/127.0.0.1/tcp/8888" --ipfs-hash /ipfs/$HASH ipfs-template
wl container create ipfs-temp --template ipfs-template --path /ipfstem
wl container mount ipfs-temp

# Verify that the template creation works
time -p chronic /bin/bash -c '[[ $(cat ~/wildland/ipfstem/file) == "foo" ]]'
time -p chronic /bin/bash -c '[[ $(cat ~/wildland/ipfstem/subdir/file) == "bar" ]]'
