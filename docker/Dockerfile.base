FROM debian:bullseye-slim

# Maintainers:
#   Michal Kluczek <michal@wildland.io>

ARG DEBIAN_FRONTEND=noninteractive
ENV WL_ENV=base

RUN useradd --shell /bin/bash --create-home user

RUN mkdir /home/user/wildland-client && chown user:user /home/user/wildland-client
WORKDIR /home/user/wildland-client

# Run update && install as one command:
# https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#apt-get
RUN apt-get -qy update && apt-get install -y \
      python3 \
      python3-distutils \
      fuse3 \
      time \
      tree \
      gocryptfs \
      encfs \
      curl \
      apache2 \
      jq \
      sudo \
    && apt-get autoremove -y \
    && rm -rf /var/lib/lists/* \
    && apt-get clean autoclean

# Add IPFS client
RUN ARCH=$(arch) && CHECKSUM="" \
  && if [ "aarch64" = ${ARCH} ] || [ "arm64" = ${ARCH} ]  ; then \
    ARCH="arm64"; \
    CHECKSUM="57455853cef842233fb6408dc599c9be5950e61adaac9b7682324987cbb9ca339382563b145d94b6d177e0a507a72916a207c4c6ec8c1015eaace730884f3f36"; \
  elif [ "amd64" = ${ARCH} ] || [ "x86_64" = ${ARCH} ] ; then \
    ARCH="amd64"; \
    CHECKSUM="1d5910f27e8d7ea333145f15c6edcbacc1e8db3a99365f0847467bdfa7c73f4d7a05562e46be8e932056c8324ed0769ca1b6758dfb0ac4c2e1b6066b57c4a086"; \
  else \
    echo "Unsupported architecture $ARCH"; \
    exit 126 ; \
  fi \
  && curl -sL \
      https://github.com/ipfs/go-ipfs/releases/download/v0.7.0/go-ipfs_v0.7.0_linux-${ARCH}.tar.gz \
      -o go-ipfs_v0.7.0_linux-${ARCH}.tar.gz \
      && echo "$CHECKSUM  go-ipfs_v0.7.0_linux-$ARCH.tar.gz" | sha512sum --check --status \
      && tar -xf go-ipfs_v0.7.0_linux-${ARCH}.tar.gz \
      && install go-ipfs/ipfs /bin/ \
      && rm -rf go-ipfs go-ipfs_v0.7.0_linux-${ARCH}.tar.gz

# Setup webdav

RUN sed -i 's/www-data/user/' /etc/apache2/envvars
COPY ./docker/apache2-wl.conf /etc/apache2/sites-available/wl.conf
RUN a2enmod dav dav_fs rewrite proxy proxy_http headers
RUN a2dissite 000-default
RUN a2ensite wl
RUN mkdir -p /var/lock/apache2
RUN chown -R user /var/lock/apache2

# sudo should be removed from .base after we get rid of fuse or use more granular sudo permission

RUN usermod -G sudo user
RUN sed -i 's/ ALL/ NOPASSWD:ALL/' /etc/sudoers

# Setup fuse

RUN echo user_allow_other >> /etc/fuse.conf

# Domain-specific files

# The COPY below does not mean the developer cannot mount own volumes and override
# project files included in the image.
COPY --chown=user:user . .
RUN chmod +x ./docker/*.sh

RUN apt-get -qy update && apt-get install -y \
        python3-pip \
        python3-venv \
        libfuse-dev \
        pkg-config \
        git \
    && python3 -m venv /home/user/env/ \
    && . /home/user/env/bin/activate \
    && pip install --no-cache-dir --no-warn-script-location -r requirements.base.txt \
    && pip install --no-cache-dir --no-warn-script-location . plugins/* \
    && apt-get remove --purge -y pkg-config libfuse-dev git gcc python3-pip python3-venv \
    && apt-get autoremove -y \
    && rm -rf /var/lib/lists/* \
    && apt-get clean autoclean \
    && chown -R user:user /home/user/env/

USER user

RUN mkdir -p /tmp/docker-user-runtime
ENV XDG_RUNTIME_DIR /tmp/docker-user-runtime
ENV WL_CLI wl
ENV WL_CTRL_SOCK /tmp/docker-user-runtime/wlfuse.sock
ENV WL_CONFIG_DIR /home/user/.config/wildland
ENV WL_MOUNT_POINT /home/user/wildland
ENV WL_START_CMD "wl start"
ENV WL_STOP_CMD "wl stop"

