stages:
  - build
  - test
  - docs

before_script:
  - mkdir -p --mode=0777 artifacts artifacts/docs artifacts/htmlcov

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-ci
  CONTAINER_IMAGE_DEV: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  image: docker/compose:latest
  services:
    - docker:dind
  script:
    - cd docker
    - docker-compose build wildland-client-base
    - docker-compose build --parallel wildland-client wildland-client-ci
    - docker tag wildland-client-ci $CONTAINER_TEST_IMAGE
    - docker tag wildland-client $CONTAINER_IMAGE_DEV
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_IMAGE_DEV

gcp:
  stage: build
  image: docker/compose:latest
  when: manual
  allow_failure: true
  services:
    - docker:dind
  script:
    - echo $CI_COMMIT_SHA > git_commit_sha.txt
    - cd docker
    - docker-compose build wildland-client-base
    - docker-compose build wildland-client-gcp
    - docker tag wildland-client-gcp:latest eu.gcr.io/single-bindery-317213/wildland-client-gcp:latest
    - echo $GCP_DOCKER_REPO_JSON | base64 -d | docker login -u _json_key --password-stdin https://eu.gcr.io
    - docker push eu.gcr.io/single-bindery-317213/wildland-client-gcp:latest

lint:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-lint

mypy:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-mypy --junit-xml artifacts/wildland-mypy.xml wildland
  artifacts:
    reports:
      junit: artifacts/wildland-mypy.xml

mypy-plugins:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-mypy --junit-xml artifacts/wildland-mypy-plugins.xml plugins
  artifacts:
    reports:
      junit: artifacts/wildland-mypy-plugins.xml

pytest:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - export PYTEST_ADDOPTS="--color=yes"
    - ./ci/ci-pytest
  artifacts:
    when: always
    paths:
      - artifacts/htmlcov/
      - artifacts/sync-daemon.log
    reports:
      junit: artifacts/wildland.xml
      cobertura: artifacts/coverage.xml
  coverage: '/TOTAL.*\s(\d+)%/'

bear-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/wildland-test-runner.sh ./ci/ci-bear

gitlab-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-gitlab

git-test:
    stage: test
    image: $CONTAINER_TEST_IMAGE
    script:
      - ./ci/ci-git

gitlab-graphql-test:
    stage: test
    image: $CONTAINER_TEST_IMAGE
    script:
      - ./ci/ci-gitlab-graphql

imap-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-imap

ipfs-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-ipfs

sshfs-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-sshfs

s3-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-s3
    
transpose-test:
    stage: test
    image: $CONTAINER_TEST_IMAGE
    script:
      - ./ci/ci-transpose

webdav-test:
    stage: test
    image: $CONTAINER_TEST_IMAGE
    script:
      - ./ci/ci-webdav

encrypted-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-encrypted

dropbox-test-legacy:
  allow_failure: true
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-dropbox "$DROPBOX_TEST_ACCESS_TOKEN"

dropbox-test:
  allow_failure: true
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-dropbox "" "$DROPBOX_TEST_APP_KEY" "$DROPBOX_TEST_REFRESH_TOKEN"

googledrive-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/ci-googledrive "$GOOGLEDRIVE_TEST_ACCESS_TOKEN"

howto-quick-start-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/howto-quick-start

howto-sharing-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/howto-sharing-and-access-control

howto-forest-creation-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/howto-forest-creation

howto-group-users-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/howto-group-users

howto-encryption-backend-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - ./ci/howto-encryption-backend

howto-cache-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  script:
    - timeout 15m ./ci/howto-cache
  artifacts:
    when: always
    paths:
      - artifacts/sync-daemon.log

smoke-test:
  stage: test
  image: docker/compose:latest
  services:
    - docker:dind
  script:
    - ./wildland-docker.sh ci/ci-smoke-test < /dev/null

pages-test:
  stage: test
  image: $CONTAINER_TEST_IMAGE
  except:
    - master
  script:
    - ./ci/ci-docs
  artifacts:
    paths:
      - artifacts/docs

pages:
  stage: docs
  image: $CONTAINER_TEST_IMAGE
  dependencies:
    - pytest
  only:
    - master
  script:
    - ./ci/ci-docs
    - cp -r artifacts/docs/html public
    - cp -r artifacts/docs/man public/man
    - cp -r artifacts/htmlcov public/coverage
  artifacts:
    paths:
      - public/
