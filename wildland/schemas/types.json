{
    "abs-path": {
        "type": "string",
        "description": "absolute path (must begin with '/')",
        "pattern": "^/.*$"
    },
    "rel-path": {
        "type": "string",
        "description": "relative path (must begin with './' or '../')",
        "pattern": "^\\.\\.?/.*$"
    },
    "http-url": {
        "type": "string",
        "description": "HTTP(S) address (must begin with http:// or https://)",
        "pattern": "^https?://.*$"
    },
    "file-url": {
        "type": "string",
        "description": "local file URL (must begin with file://)",
        "pattern": "^file://[^/]*/.*$"
    },
    "wildland-url": {
        "type": "string",
        "description": "Wildland URL (must begin with wildland: and containt at least three parts separated by ':'; example URLs: wildland::/data/books: ; wildland:@default:/data/books:/file.txt",
        "pattern": "^wildland:.*:.+:.*$"
    },
    "linked-file": {
        "type": "object",
        "description": "file from a storage",
        "required": ["object", "storage", "file"],
        "properties": {
            "object": {
                "const": "link"
            },
            "storage": {
                "description": "inline storage containing linked file",
                "$ref": "/schemas/storage.schema.json#definitions/storage-inline"
            },
            "file": {
                "description": "absolute path to manifest file in storage, e.g. /manifest.yaml or /subdir/manifest.yaml; must begin with /",
                "$ref": "#/abs-path"
            }
        }

    },
    "url": {
        "description": "HTTP, file URL or wildland URL",
        "oneOf": [
            { "$ref": "#/http-url" },
            { "$ref": "#/file-url" },
            { "$ref": "#/wildland-url" }
        ]
    },
    "manifest-url": {
        "description": "URL to a manifest file or a link to manifest file",
        "oneOf": [
            { "$ref": "#/url" },
            { "$ref": "#/linked-file" }
        ]
    },
    "fingerprint": {
        "type": "string",
        "description": "key fingerprint (must begin with 0x)",
        "pattern": "^0x[0-9a-f]+$"
    },
    "access-full": {
        "type": "object",
        "description": "access entry for full access",
        "properties": {
            "user": {
                "const": "*"
            }
        }
    },
    "access-user": {
        "type": "object",
        "description": "access entry for a user",
        "properties": {
            "user": {
                "$ref": "#/fingerprint"
            }
        }
    },
    "access": {
        "oneOf": [
            {
                "type": "array",
                "minItems": 1,
                "maxItems": 1,
                "items": {"$ref":  "#/access-full"},
                "description": "Open access to manifest (no encryption)"
            },
            {
                "type": "array",
                "items": {"$ref":  "#/access-user"},
                "minItems": 0,
                "description": "list of users with access to the manifest (owner always has access and does not have to be listed here)"
            }
        ],
        "description": "complete access entry"
    },
    "encrypted": {
        "type": "object",
        "description": "encrypted data",
        "required": [
            "encrypted"
        ],
        "properties": {
            "encrypted": {
                "type": "object",
                "required": [
                    "encrypted-data",
                    "encrypted-keys"
                ],
                "properties": {
                    "encrypted-data": {
                        "type": "string"
                    },
                    "encrypted-keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "version": {
        "const": "1",
        "description": "manifest version"
    }
}
