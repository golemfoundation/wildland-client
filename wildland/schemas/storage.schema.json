{
    "allOf": [{"$ref": "#/definitions/storage-inline"}],
    "required": ["object", "owner", "type", "container-path", "version"],
    "definitions": {
        "version": { "$ref": "/schemas/types.json#version"},
        "storage-inline": {
            "title": "Storage manifest (common schema)",
            "type": "object",
            "required": ["type", "object"],
            "properties": {
                "object": { "const": "storage" },
                "owner": {
                    "$ref": "/schemas/types.json#fingerprint",
                    "description": "Signer of the manifest. Needs to match the owner of the container."
                },
                "type": {
                    "type": "string",
                    "description": "Storage backend. The manifest should contain backend-specific parameters."
                },
                "container-path": {
                    "$ref": "/schemas/types.json#abs-path",
                    "description": "Path identifying the container this storage is for (by convention, /.uuid/...)."
                },
                "backend-id":{
                    "type": "string",
                    "description": "Storage UUID. Optional, but if it is missing it will be generated automatically."
                },
                "read-only": {
                    "type": "boolean",
                    "description": "Mount as read-only."
                },
                "trusted": {
                    "type": "boolean",
                    "description": "Allow loading unsigned manifests (for the same owner) from this storage."
                },
                "manifest-pattern": {
                    "oneOf": [
                    { "$ref": "/schemas/types.json#pattern-glob" },
                    { "$ref": "/schemas/types.json#pattern-list" }
                    ],
                    "description": "A strategy for finding manifests in this storage, based on path."
                },
                "watcher-interval": {
                    "type": "integer",
                    "description": "Timer to use for watcher mechanism for this storage. Will cause a simple, brute-force watcher that scans the storage every watcher-interval seconds to be used. If omitted, a mechanism native to the backend will be used, or none, if not available."
                },
                "public-url": {
                    "type": "string",
                    "description": "Base for public URL. Files can be accessed by joining this base and the path relative to storage root."
                },
                "access": {
                    "$ref": "/schemas/types.json#access",
                    "description": "Access control; by default manifests are encrypted to their owner."
                },
                "primary": {
                    "type": "boolean",
                    "description": "Designate storage as primary, overriding the upper-most one being primary by default. Can only be used once."
                }
            }
        }
    }
}
